[{"/Users/shubhamrastogi/Desktop/drop/client/src/index.js":"1","/Users/shubhamrastogi/Desktop/drop/client/src/App.js":"2","/Users/shubhamrastogi/Desktop/drop/client/src/components/test.js":"3"},{"size":233,"mtime":1694598434227,"results":"4","hashOfConfig":"5"},{"size":450,"mtime":1694603123447,"results":"6","hashOfConfig":"5"},{"size":2968,"mtime":1694605895797,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"ueratg",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"18"},"/Users/shubhamrastogi/Desktop/drop/client/src/index.js",[],[],[],"/Users/shubhamrastogi/Desktop/drop/client/src/App.js",[],[],"/Users/shubhamrastogi/Desktop/drop/client/src/components/test.js",["19","20","21","22"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst DropboxIntegration = () => {\n  const [ isAuthenticated, setIsAuthenticated ] = useState(false);\n  const [ accessToken, setAccessToken ] = useState(null);\n\n  useEffect(() => {\n    // Check if an access token is available in local storage\n    const storedToken = localStorage.getItem('m4of4ek7lvyylpo');\n    if (storedToken) {\n      setAccessToken(storedToken);\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  const handleLogin = () => {\n    // Redirect the user to Dropbox for OAuth 2.0 authentication\n    const t = \"redirect_uri=http://localhost:3000/api/dropbox/redirect\";\n    window.location.href = `https://www.dropbox.com/oauth2/authorize?client_id=m4of4ek7lvyylpo&${t}&response_type=token&access_token_type=offline`;\n  };\n\n  const handleLogout = () => {\n    // Clear the access token from state and local storage\n    setAccessToken(null);\n    localStorage.removeItem('dropboxAccessToken');\n    setIsAuthenticated(false);\n  };\n  const uploader = () => {\n    console.log(window.location.hash);\n    const access_token = window.location.hash.split('&')[ 0 ].split('=')[ 1 ];\n    const uploadUrl = 'https://content.dropboxapi.com/2/files/upload';\n    // const header = {\n    // Authorization: `Bearer ${access_token}`,\n    // Dropbox-API-Arg: `{\\\"autorename\\\":false,\\\"mode\\\":\\\"add\\\",\\\"mute\\\":false,\\\"path\\\":\\\"/Homework/math/Matrices.txt\\\",\\\"strict_conflict\\\":false}`,\n    // Content-Type: \"application/octet-stream\"\n    // }\n    axios.post(\"https://api.dropboxapi.com/2/users/get_current_account\", {\n      \"Authorization\": `Bearer jx48vq6or2uzg9e`\n    }).\n      then((res) => {\n        console.log(res);\n      }).catch(e => console.log(e));\n    // const apiUrl = 'https://content.dropboxapi.com/2/files/upload';\n    //   const headers = {\n    //     'Authorization': `Bearer ${access_token}`,\n    //     'Content-Type': 'application/octet-stream',\n    //     'Dropbox-API-Arg': JSON.stringify({\n    //       path: `/uploads/${file.name}`,\n    //       mode: 'add',\n    //       autorename: true,\n    //       mute: false,\n    //     }),\n    //   };\n\n    // axios({\n    //   method: 'post',\n    //   headers: {\n    //     \"Authorization\": `Bearer ${access_token}`,\n    //     \"Dropbox-API-Arg\": `{\\\"autorename\\\":false,\\\"mode\\\":\\\"add\\\",\\\"mute\\\":false,\\\"path\\\":\\\"/Homework/math/Matrices.txt\\\",\\\"strict_conflict\\\":false}`,\n    //     \"Content-Type\": \"application/octet-stream\"\n    //   },\n    //   url: uploadUrl\n    // }).then(res => {\n    //   console.log(res);\n    // })\n  };\n\n  return (\n    <div>\n      {!isAuthenticated ? (\n        <div>\n          <button onClick={handleLogin}>Connect to Dropbox</button>\n          <button onClick={uploader}>Upload</button>\n        </div>\n      ) : (\n        <div>\n          <p>Connected to Dropbox!</p>\n          <button onClick={handleLogout}>Disconnect</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DropboxIntegration;",{"ruleId":"23","severity":1,"message":"24","line":6,"column":11,"nodeType":"25","messageId":"26","endLine":6,"endColumn":22},{"ruleId":"23","severity":1,"message":"27","line":31,"column":11,"nodeType":"25","messageId":"26","endLine":31,"endColumn":23},{"ruleId":"23","severity":1,"message":"28","line":32,"column":11,"nodeType":"25","messageId":"26","endLine":32,"endColumn":20},{"ruleId":"29","severity":1,"message":"30","line":40,"column":7,"nodeType":"31","messageId":"32","endLine":40,"endColumn":8,"fix":"33"},"no-unused-vars","'accessToken' is assigned a value but never used.","Identifier","unusedVar","'access_token' is assigned a value but never used.","'uploadUrl' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"34","text":"35"},[1643,1651],"\n      ."]