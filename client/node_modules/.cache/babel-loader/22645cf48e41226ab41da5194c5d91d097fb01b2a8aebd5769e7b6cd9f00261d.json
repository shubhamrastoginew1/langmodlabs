{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamrastogi/Desktop/drop/src/components/test.js\";\nimport React from 'react';\nimport { Dropbox } from 'dropbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropboxUploader = () => {\n  const uploadFileToDropbox = async file => {\n    // Initialize the Dropbox SDK with your app's client ID\n    const dbx = new Dropbox({\n      clientId: 'm4of4ek7lvyylpo'\n    });\n    try {\n      // Use the access token obtained during authentication\n      const accessToken = 'jx48vq6or2uzg9e'; // Replace with the actual access token\n      dbx.setAccessToken(accessToken);\n\n      // Upload the selected file to Dropbox\n      await dbx.filesUpload({\n        path: `/uploads/${file.name}`,\n        // Specify the destination path\n        contents: file // The file to upload\n      });\n\n      console.log('File uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading file to Dropbox:', error);\n    }\n  };\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      uploadFileToDropbox(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = DropboxUploader;\nexport default DropboxUploader;\nvar _c;\n$RefreshReg$(_c, \"DropboxUploader\");","map":{"version":3,"names":["React","Dropbox","jsxDEV","_jsxDEV","DropboxUploader","uploadFileToDropbox","file","dbx","clientId","accessToken","setAccessToken","filesUpload","path","name","contents","console","log","error","handleFileUpload","event","target","files","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shubhamrastogi/Desktop/drop/src/components/test.js"],"sourcesContent":["import React from 'react';\nimport { Dropbox } from 'dropbox';\n\nconst DropboxUploader = () => {\n  const uploadFileToDropbox = async (file) => {\n    // Initialize the Dropbox SDK with your app's client ID\n    const dbx = new Dropbox({ clientId: 'm4of4ek7lvyylpo' });\n\n    try {\n      // Use the access token obtained during authentication\n      const accessToken = 'jx48vq6or2uzg9e'; // Replace with the actual access token\n      dbx.setAccessToken(accessToken);\n\n      // Upload the selected file to Dropbox\n      await dbx.filesUpload({\n        path: `/uploads/${file.name}`, // Specify the destination path\n        contents: file, // The file to upload\n      });\n\n      console.log('File uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading file to Dropbox:', error);\n    }\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      uploadFileToDropbox(file);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileUpload} />\n    </div>\n  );\n};\n\nexport default DropboxUploader;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,mBAAmB,GAAG,MAAOC,IAAI,IAAK;IAC1C;IACA,MAAMC,GAAG,GAAG,IAAIN,OAAO,CAAC;MAAEO,QAAQ,EAAE;IAAkB,CAAC,CAAC;IAExD,IAAI;MACF;MACA,MAAMC,WAAW,GAAG,iBAAiB,CAAC,CAAC;MACvCF,GAAG,CAACG,cAAc,CAACD,WAAW,CAAC;;MAE/B;MACA,MAAMF,GAAG,CAACI,WAAW,CAAC;QACpBC,IAAI,EAAG,YAAWN,IAAI,CAACO,IAAK,EAAC;QAAE;QAC/BC,QAAQ,EAAER,IAAI,CAAE;MAClB,CAAC,CAAC;;MAEFS,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMb,IAAI,GAAGa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIf,IAAI,EAAE;MACRD,mBAAmB,CAACC,IAAI,CAAC;IAC3B;EACF,CAAC;EAED,oBACEH,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEN;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACC,EAAA,GAlCIzB,eAAe;AAoCrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}